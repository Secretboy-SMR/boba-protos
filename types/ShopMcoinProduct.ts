// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_typescript,// @generated from protobuf file "ShopMcoinProduct.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ShopMcoinProduct
 */
export interface ShopMcoinProduct {
    /**
     * @generated from protobuf field: string product_id = 1;
     */
    productId: string;
    /**
     * @generated from protobuf field: string price_tier = 2;
     */
    priceTier: string;
    /**
     * @generated from protobuf field: uint32 mcoin_base = 3;
     */
    mcoinBase: number;
    /**
     * @generated from protobuf field: uint32 mcoin_non_first = 4;
     */
    mcoinNonFirst: number;
    /**
     * @generated from protobuf field: uint32 mcoin_first = 5;
     */
    mcoinFirst: number;
    /**
     * @generated from protobuf field: uint32 bought_num = 6;
     */
    boughtNum: number;
    /**
     * @generated from protobuf field: bool is_audit = 7;
     */
    isAudit: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class ShopMcoinProduct$Type extends MessageType<ShopMcoinProduct> {
    constructor() {
        super("ShopMcoinProduct", [
            { no: 1, name: "product_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "price_tier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mcoin_base", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "mcoin_non_first", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "mcoin_first", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "bought_num", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "is_audit", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ShopMcoinProduct>): ShopMcoinProduct {
        const message = { productId: "", priceTier: "", mcoinBase: 0, mcoinNonFirst: 0, mcoinFirst: 0, boughtNum: 0, isAudit: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ShopMcoinProduct>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ShopMcoinProduct): ShopMcoinProduct {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string product_id */ 1:
                    message.productId = reader.string();
                    break;
                case /* string price_tier */ 2:
                    message.priceTier = reader.string();
                    break;
                case /* uint32 mcoin_base */ 3:
                    message.mcoinBase = reader.uint32();
                    break;
                case /* uint32 mcoin_non_first */ 4:
                    message.mcoinNonFirst = reader.uint32();
                    break;
                case /* uint32 mcoin_first */ 5:
                    message.mcoinFirst = reader.uint32();
                    break;
                case /* uint32 bought_num */ 6:
                    message.boughtNum = reader.uint32();
                    break;
                case /* bool is_audit */ 7:
                    message.isAudit = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ShopMcoinProduct, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string product_id = 1; */
        if (message.productId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.productId);
        /* string price_tier = 2; */
        if (message.priceTier !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.priceTier);
        /* uint32 mcoin_base = 3; */
        if (message.mcoinBase !== 0)
            writer.tag(3, WireType.Varint).uint32(message.mcoinBase);
        /* uint32 mcoin_non_first = 4; */
        if (message.mcoinNonFirst !== 0)
            writer.tag(4, WireType.Varint).uint32(message.mcoinNonFirst);
        /* uint32 mcoin_first = 5; */
        if (message.mcoinFirst !== 0)
            writer.tag(5, WireType.Varint).uint32(message.mcoinFirst);
        /* uint32 bought_num = 6; */
        if (message.boughtNum !== 0)
            writer.tag(6, WireType.Varint).uint32(message.boughtNum);
        /* bool is_audit = 7; */
        if (message.isAudit !== false)
            writer.tag(7, WireType.Varint).bool(message.isAudit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ShopMcoinProduct
 */
export const ShopMcoinProduct = new ShopMcoinProduct$Type();
