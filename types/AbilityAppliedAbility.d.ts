// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "AbilityAppliedAbility.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AbilityScalarValueEntry } from "./AbilityScalarValueEntry";
import { AbilityString } from "./AbilityString";
/**
 * @generated from protobuf message AbilityAppliedAbility
 */
export interface AbilityAppliedAbility {
    /**
     * @generated from protobuf field: AbilityString ability_name = 1;
     */
    abilityName?: AbilityString;
    /**
     * @generated from protobuf field: AbilityString ability_override = 2;
     */
    abilityOverride?: AbilityString;
    /**
     * @generated from protobuf field: repeated AbilityScalarValueEntry override_map = 3;
     */
    overrideMap: AbilityScalarValueEntry[];
    /**
     * @generated from protobuf field: uint32 instanced_ability_id = 4;
     */
    instancedAbilityId: number;
}
declare class AbilityAppliedAbility$Type extends MessageType<AbilityAppliedAbility> {
    constructor();
    create(value?: PartialMessage<AbilityAppliedAbility>): AbilityAppliedAbility;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AbilityAppliedAbility): AbilityAppliedAbility;
    internalBinaryWrite(message: AbilityAppliedAbility, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message AbilityAppliedAbility
 */
export declare const AbilityAppliedAbility: AbilityAppliedAbility$Type;
export {};
