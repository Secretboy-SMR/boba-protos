// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "MotionInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { MotionState } from "./MotionState";
import { Vector } from "./Vector";
/**
 * @generated from protobuf message MotionInfo
 */
export interface MotionInfo {
    /**
     * @generated from protobuf field: Vector pos = 1;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: Vector rot = 2;
     */
    rot?: Vector;
    /**
     * @generated from protobuf field: Vector speed = 3;
     */
    speed?: Vector;
    /**
     * @generated from protobuf field: MotionState state = 4;
     */
    state: MotionState;
    /**
     * @generated from protobuf field: repeated Vector params = 5;
     */
    params: Vector[];
    /**
     * @generated from protobuf field: Vector ref_pos = 6;
     */
    refPos?: Vector;
    /**
     * @generated from protobuf field: uint32 ref_id = 7;
     */
    refId: number;
    /**
     * @generated from protobuf field: uint32 scene_time = 8;
     */
    sceneTime: number;
    /**
     * @generated from protobuf field: uint32 interval_velocity = 9;
     */
    intervalVelocity: number;
}
declare class MotionInfo$Type extends MessageType<MotionInfo> {
    constructor();
    create(value?: PartialMessage<MotionInfo>): MotionInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MotionInfo): MotionInfo;
    internalBinaryWrite(message: MotionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message MotionInfo
 */
export declare const MotionInfo: MotionInfo$Type;
export {};
