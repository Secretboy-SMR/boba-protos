// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "BlockInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message BlockInfo
 */
export interface BlockInfo {
    /**
     * @generated from protobuf field: uint32 block_id = 1;
     */
    blockId: number;
    /**
     * @generated from protobuf field: uint32 data_version = 2;
     */
    dataVersion: number;
    /**
     * @generated from protobuf field: bytes bin_data = 3;
     */
    binData: Uint8Array;
    /**
     * @generated from protobuf field: bool is_dirty = 4;
     */
    isDirty: boolean;
}
declare class BlockInfo$Type extends MessageType<BlockInfo> {
    constructor();
    create(value?: PartialMessage<BlockInfo>): BlockInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlockInfo): BlockInfo;
    internalBinaryWrite(message: BlockInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message BlockInfo
 */
export declare const BlockInfo: BlockInfo$Type;
export {};
