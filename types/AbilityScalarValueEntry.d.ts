// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "AbilityScalarValueEntry.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AbilityScalarType } from "./AbilityScalarType";
import { AbilityString } from "./AbilityString";
/**
 * @generated from protobuf message AbilityScalarValueEntry
 */
export interface AbilityScalarValueEntry {
    /**
     * @generated from protobuf oneof: Value
     */
    value: {
        oneofKind: "floatValue";
        /**
         * @generated from protobuf field: float float_value = 3;
         */
        floatValue: number;
    } | {
        oneofKind: "stringValue";
        /**
         * @generated from protobuf field: string string_value = 4;
         */
        stringValue: string;
    } | {
        oneofKind: "intValue";
        /**
         * @generated from protobuf field: int32 int_value = 5;
         */
        intValue: number;
    } | {
        oneofKind: "uintValue";
        /**
         * @generated from protobuf field: uint32 uint_value = 6;
         */
        uintValue: number;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: AbilityString key = 1;
     */
    key?: AbilityString;
    /**
     * @generated from protobuf field: AbilityScalarType value_type = 2;
     */
    valueType: AbilityScalarType;
}
declare class AbilityScalarValueEntry$Type extends MessageType<AbilityScalarValueEntry> {
    constructor();
    create(value?: PartialMessage<AbilityScalarValueEntry>): AbilityScalarValueEntry;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AbilityScalarValueEntry): AbilityScalarValueEntry;
    internalBinaryWrite(message: AbilityScalarValueEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message AbilityScalarValueEntry
 */
export declare const AbilityScalarValueEntry: AbilityScalarValueEntry$Type;
export {};
