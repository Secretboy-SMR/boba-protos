// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "Equip.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Weapon } from "./Weapon";
import { Reliquary } from "./Reliquary";
/**
 * @generated from protobuf message Equip
 */
export interface Equip {
    /**
     * @generated from protobuf oneof: Detail
     */
    detail: {
        oneofKind: "reliquary";
        /**
         * @generated from protobuf field: Reliquary reliquary = 1;
         */
        reliquary: Reliquary;
    } | {
        oneofKind: "weapon";
        /**
         * @generated from protobuf field: Weapon weapon = 2;
         */
        weapon: Weapon;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: bool is_locked = 3;
     */
    isLocked: boolean;
}
declare class Equip$Type extends MessageType<Equip> {
    constructor();
    create(value?: PartialMessage<Equip>): Equip;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Equip): Equip;
    internalBinaryWrite(message: Equip, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message Equip
 */
export declare const Equip: Equip$Type;
export {};
