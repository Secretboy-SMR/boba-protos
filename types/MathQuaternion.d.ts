// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "MathQuaternion.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message MathQuaternion
 */
export interface MathQuaternion {
    /**
     * @generated from protobuf field: float X = 1 [json_name = "X"];
     */
    x: number;
    /**
     * @generated from protobuf field: float Y = 2 [json_name = "Y"];
     */
    y: number;
    /**
     * @generated from protobuf field: float Z = 3 [json_name = "Z"];
     */
    z: number;
    /**
     * @generated from protobuf field: float W = 4 [json_name = "W"];
     */
    w: number;
}
declare class MathQuaternion$Type extends MessageType<MathQuaternion> {
    constructor();
    create(value?: PartialMessage<MathQuaternion>): MathQuaternion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MathQuaternion): MathQuaternion;
    internalBinaryWrite(message: MathQuaternion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message MathQuaternion
 */
export declare const MathQuaternion: MathQuaternion$Type;
export {};
