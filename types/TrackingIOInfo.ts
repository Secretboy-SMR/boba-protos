// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_typescript,// @generated from protobuf file "TrackingIOInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message TrackingIOInfo
 */
export interface TrackingIOInfo {
    /**
     * @generated from protobuf field: string appid = 1;
     */
    appid: string;
    /**
     * @generated from protobuf field: string deviceid = 2;
     */
    deviceid: string;
    /**
     * @generated from protobuf field: string mac = 3;
     */
    mac: string;
    /**
     * @generated from protobuf field: string rydevicetype = 4;
     */
    rydevicetype: string;
    /**
     * @generated from protobuf field: string client_tz = 5;
     */
    clientTz: string;
    /**
     * @generated from protobuf field: string current_caid = 6;
     */
    currentCaid: string;
    /**
     * @generated from protobuf field: string cached_caid = 7;
     */
    cachedCaid: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class TrackingIOInfo$Type extends MessageType<TrackingIOInfo> {
    constructor() {
        super("TrackingIOInfo", [
            { no: 1, name: "appid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "deviceid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mac", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rydevicetype", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "client_tz", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "current_caid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "cached_caid", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrackingIOInfo>): TrackingIOInfo {
        const message = { appid: "", deviceid: "", mac: "", rydevicetype: "", clientTz: "", currentCaid: "", cachedCaid: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrackingIOInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrackingIOInfo): TrackingIOInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string appid */ 1:
                    message.appid = reader.string();
                    break;
                case /* string deviceid */ 2:
                    message.deviceid = reader.string();
                    break;
                case /* string mac */ 3:
                    message.mac = reader.string();
                    break;
                case /* string rydevicetype */ 4:
                    message.rydevicetype = reader.string();
                    break;
                case /* string client_tz */ 5:
                    message.clientTz = reader.string();
                    break;
                case /* string current_caid */ 6:
                    message.currentCaid = reader.string();
                    break;
                case /* string cached_caid */ 7:
                    message.cachedCaid = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrackingIOInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string appid = 1; */
        if (message.appid !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.appid);
        /* string deviceid = 2; */
        if (message.deviceid !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.deviceid);
        /* string mac = 3; */
        if (message.mac !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.mac);
        /* string rydevicetype = 4; */
        if (message.rydevicetype !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.rydevicetype);
        /* string client_tz = 5; */
        if (message.clientTz !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.clientTz);
        /* string current_caid = 6; */
        if (message.currentCaid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.currentCaid);
        /* string cached_caid = 7; */
        if (message.cachedCaid !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.cachedCaid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TrackingIOInfo
 */
export const TrackingIOInfo = new TrackingIOInfo$Type();
