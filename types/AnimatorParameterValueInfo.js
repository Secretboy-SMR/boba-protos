// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "AnimatorParameterValueInfo.proto" (syntax proto3),// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class AnimatorParameterValueInfo$Type extends MessageType {
    constructor() {
        super("AnimatorParameterValueInfo", [
            { no: 2, name: "int_val", kind: "scalar", oneof: "paraVal", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "float_val", kind: "scalar", oneof: "paraVal", T: 2 /*ScalarType.FLOAT*/ },
            { no: 4, name: "bool_val", kind: "scalar", oneof: "paraVal", T: 8 /*ScalarType.BOOL*/ },
            { no: 1, name: "para_type", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = { paraVal: { oneofKind: undefined }, paraType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 int_val */ 2:
                    message.paraVal = {
                        oneofKind: "intVal",
                        intVal: reader.int32()
                    };
                    break;
                case /* float float_val */ 3:
                    message.paraVal = {
                        oneofKind: "floatVal",
                        floatVal: reader.float()
                    };
                    break;
                case /* bool bool_val */ 4:
                    message.paraVal = {
                        oneofKind: "boolVal",
                        boolVal: reader.bool()
                    };
                    break;
                case /* uint32 para_type */ 1:
                    message.paraType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 int_val = 2; */
        if (message.paraVal.oneofKind === "intVal")
            writer.tag(2, WireType.Varint).int32(message.paraVal.intVal);
        /* float float_val = 3; */
        if (message.paraVal.oneofKind === "floatVal")
            writer.tag(3, WireType.Bit32).float(message.paraVal.floatVal);
        /* bool bool_val = 4; */
        if (message.paraVal.oneofKind === "boolVal")
            writer.tag(4, WireType.Varint).bool(message.paraVal.boolVal);
        /* uint32 para_type = 1; */
        if (message.paraType !== 0)
            writer.tag(1, WireType.Varint).uint32(message.paraType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AnimatorParameterValueInfo
 */
export const AnimatorParameterValueInfo = new AnimatorParameterValueInfo$Type();
