// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "SceneMonsterInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { MonsterRoute } from "./MonsterRoute";
import { MonsterBornType } from "./MonsterBornType";
import { SceneWeaponInfo } from "./SceneWeaponInfo";
import { SceneFishInfo } from "./SceneFishInfo";
/**
 * @generated from protobuf message SceneMonsterInfo
 */
export interface SceneMonsterInfo {
    /**
     * @generated from protobuf oneof: Content
     */
    content: {
        oneofKind: "fishInfo";
        /**
         * @generated from protobuf field: SceneFishInfo fish_info = 50;
         */
        fishInfo: SceneFishInfo;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: uint32 monster_id = 1;
     */
    monsterId: number;
    /**
     * @generated from protobuf field: uint32 group_id = 2;
     */
    groupId: number;
    /**
     * @generated from protobuf field: uint32 config_id = 3;
     */
    configId: number;
    /**
     * @generated from protobuf field: repeated SceneWeaponInfo weapon_list = 4;
     */
    weaponList: SceneWeaponInfo[];
    /**
     * @generated from protobuf field: uint32 authority_peer_id = 5;
     */
    authorityPeerId: number;
    /**
     * @generated from protobuf field: repeated uint32 affix_list = 6;
     */
    affixList: number[];
    /**
     * @generated from protobuf field: bool is_elite = 7;
     */
    isElite: boolean;
    /**
     * @generated from protobuf field: uint32 owner_entity_id = 8;
     */
    ownerEntityId: number;
    /**
     * @generated from protobuf field: uint32 summoned_tag = 9;
     */
    summonedTag: number;
    /**
     * @generated from protobuf field: map<uint32, uint32> summon_tag_map = 10;
     */
    summonTagMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: uint32 pose_id = 11;
     */
    poseId: number;
    /**
     * @generated from protobuf field: MonsterBornType born_type = 12;
     */
    bornType: MonsterBornType;
    /**
     * @generated from protobuf field: uint32 block_id = 13;
     */
    blockId: number;
    /**
     * @generated from protobuf field: uint32 mark_flag = 14;
     */
    markFlag: number;
    /**
     * @generated from protobuf field: uint32 title_id = 15;
     */
    titleId: number;
    /**
     * @generated from protobuf field: uint32 special_name_id = 16;
     */
    specialNameId: number;
    /**
     * @generated from protobuf field: uint32 attack_target_id = 17;
     */
    attackTargetId: number;
    /**
     * @generated from protobuf field: MonsterRoute monster_route = 18;
     */
    monsterRoute?: MonsterRoute;
    /**
     * @generated from protobuf field: uint32 ai_config_id = 19;
     */
    aiConfigId: number;
    /**
     * @generated from protobuf field: uint32 level_route_id = 20;
     */
    levelRouteId: number;
    /**
     * @generated from protobuf field: uint32 init_pose_id = 21;
     */
    initPoseId: number;
}
declare class SceneMonsterInfo$Type extends MessageType<SceneMonsterInfo> {
    constructor();
    create(value?: PartialMessage<SceneMonsterInfo>): SceneMonsterInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SceneMonsterInfo): SceneMonsterInfo;
    private binaryReadMap10;
    internalBinaryWrite(message: SceneMonsterInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message SceneMonsterInfo
 */
export declare const SceneMonsterInfo: SceneMonsterInfo$Type;
export {};
