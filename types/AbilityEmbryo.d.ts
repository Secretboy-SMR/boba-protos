// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "AbilityEmbryo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message AbilityEmbryo
 */
export interface AbilityEmbryo {
    /**
     * @generated from protobuf field: uint32 ability_id = 1;
     */
    abilityId: number;
    /**
     * @generated from protobuf field: fixed32 ability_name_hash = 2;
     */
    abilityNameHash: number;
    /**
     * @generated from protobuf field: fixed32 ability_override_name_hash = 3;
     */
    abilityOverrideNameHash: number;
}
declare class AbilityEmbryo$Type extends MessageType<AbilityEmbryo> {
    constructor();
    create(value?: PartialMessage<AbilityEmbryo>): AbilityEmbryo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AbilityEmbryo): AbilityEmbryo;
    internalBinaryWrite(message: AbilityEmbryo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message AbilityEmbryo
 */
export declare const AbilityEmbryo: AbilityEmbryo$Type;
export {};
