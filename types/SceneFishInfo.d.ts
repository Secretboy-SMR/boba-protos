// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "SceneFishInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Vector } from "./Vector";
/**
 * @generated from protobuf message SceneFishInfo
 */
export interface SceneFishInfo {
    /**
     * @generated from protobuf field: uint32 fish_id = 1;
     */
    fishId: number;
    /**
     * @generated from protobuf field: uint32 fish_pool_entity_id = 2;
     */
    fishPoolEntityId: number;
    /**
     * @generated from protobuf field: Vector fish_pool_pos = 3;
     */
    fishPoolPos?: Vector;
    /**
     * @generated from protobuf field: uint32 fish_pool_gadget_id = 4;
     */
    fishPoolGadgetId: number;
}
declare class SceneFishInfo$Type extends MessageType<SceneFishInfo> {
    constructor();
    create(value?: PartialMessage<SceneFishInfo>): SceneFishInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SceneFishInfo): SceneFishInfo;
    internalBinaryWrite(message: SceneFishInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message SceneFishInfo
 */
export declare const SceneFishInfo: SceneFishInfo$Type;
export {};
