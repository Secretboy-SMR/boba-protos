// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "GadgetPlayInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GadgetCrucibleInfo } from "./GadgetCrucibleInfo";
/**
 * @generated from protobuf message GadgetPlayInfo
 */
export interface GadgetPlayInfo {
    /**
     * @generated from protobuf oneof: PlayInfo
     */
    playInfo: {
        oneofKind: "crucibleInfo";
        /**
         * @generated from protobuf field: GadgetCrucibleInfo crucible_info = 21;
         */
        crucibleInfo: GadgetCrucibleInfo;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: uint32 play_type = 1;
     */
    playType: number;
    /**
     * @generated from protobuf field: uint32 duration = 2;
     */
    duration: number;
    /**
     * @generated from protobuf field: repeated uint32 progress_stage_list = 3;
     */
    progressStageList: number[];
    /**
     * @generated from protobuf field: uint32 start_cd = 4;
     */
    startCd: number;
    /**
     * @generated from protobuf field: uint32 start_time = 5;
     */
    startTime: number;
    /**
     * @generated from protobuf field: uint32 progress = 6;
     */
    progress: number;
}
declare class GadgetPlayInfo$Type extends MessageType<GadgetPlayInfo> {
    constructor();
    create(value?: PartialMessage<GadgetPlayInfo>): GadgetPlayInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GadgetPlayInfo): GadgetPlayInfo;
    internalBinaryWrite(message: GadgetPlayInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message GadgetPlayInfo
 */
export declare const GadgetPlayInfo: GadgetPlayInfo$Type;
export {};
