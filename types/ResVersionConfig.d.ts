// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "ResVersionConfig.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ResVersionConfig
 */
export interface ResVersionConfig {
    /**
     * @generated from protobuf field: uint32 version = 1;
     */
    version: number;
    /**
     * @generated from protobuf field: bool relogin = 2;
     */
    relogin: boolean;
    /**
     * @generated from protobuf field: string md5 = 3;
     */
    md5: string;
    /**
     * @generated from protobuf field: string release_total_size = 4;
     */
    releaseTotalSize: string;
    /**
     * @generated from protobuf field: string version_suffix = 5;
     */
    versionSuffix: string;
    /**
     * @generated from protobuf field: string branch = 6;
     */
    branch: string;
    /**
     * @generated from protobuf field: string next_script_version = 7;
     */
    nextScriptVersion: string;
}
declare class ResVersionConfig$Type extends MessageType<ResVersionConfig> {
    constructor();
    create(value?: PartialMessage<ResVersionConfig>): ResVersionConfig;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResVersionConfig): ResVersionConfig;
    internalBinaryWrite(message: ResVersionConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ResVersionConfig
 */
export declare const ResVersionConfig: ResVersionConfig$Type;
export {};
