// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "ServerBuff.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ServerBuff
 */
export interface ServerBuff {
    /**
     * @generated from protobuf field: uint32 server_buff_uid = 1;
     */
    serverBuffUid: number;
    /**
     * @generated from protobuf field: uint32 server_buff_id = 2;
     */
    serverBuffId: number;
    /**
     * @generated from protobuf field: uint32 server_buff_type = 3;
     */
    serverBuffType: number;
    /**
     * @generated from protobuf field: uint32 instanced_modifier_id = 4;
     */
    instancedModifierId: number;
    /**
     * @generated from protobuf field: bool is_modifier_added = 5;
     */
    isModifierAdded: boolean;
}
declare class ServerBuff$Type extends MessageType<ServerBuff> {
    constructor();
    create(value?: PartialMessage<ServerBuff>): ServerBuff;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ServerBuff): ServerBuff;
    internalBinaryWrite(message: ServerBuff, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ServerBuff
 */
export declare const ServerBuff: ServerBuff$Type;
export {};
