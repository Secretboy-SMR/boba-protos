// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "PlayerLoginRsp.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FeatureBlockInfo } from "./FeatureBlockInfo";
import { ShortAbilityHashPair } from "./ShortAbilityHashPair";
import { BlockInfo } from "./BlockInfo";
import { ResVersionConfig } from "./ResVersionConfig";
/**
 * @generated from protobuf message PlayerLoginRsp
 */
export interface PlayerLoginRsp {
    /**
     * @generated from protobuf field: int32 retcode = 1;
     */
    retcode: number;
    /**
     * @generated from protobuf field: bytes player_data = 2;
     */
    playerData: Uint8Array;
    /**
     * @generated from protobuf field: bool is_new_player = 3;
     */
    isNewPlayer: boolean;
    /**
     * @generated from protobuf field: uint32 target_uid = 4;
     */
    targetUid: number;
    /**
     * @generated from protobuf field: uint64 login_rand = 5;
     */
    loginRand: bigint;
    /**
     * @generated from protobuf field: bool is_use_ability_hash = 6;
     */
    isUseAbilityHash: boolean;
    /**
     * @generated from protobuf field: int32 ability_hash_code = 7;
     */
    abilityHashCode: number;
    /**
     * @generated from protobuf field: map<string, int32> ability_hash_map = 8;
     */
    abilityHashMap: {
        [key: string]: number;
    };
    /**
     * @generated from protobuf field: uint32 client_data_version = 9;
     */
    clientDataVersion: number;
    /**
     * @generated from protobuf field: bool is_relogin = 11;
     */
    isRelogin: boolean;
    /**
     * @generated from protobuf field: uint32 client_silence_data_version = 13;
     */
    clientSilenceDataVersion: number;
    /**
     * @generated from protobuf field: string game_biz = 14;
     */
    gameBiz: string;
    /**
     * @generated from protobuf field: uint32 player_data_version = 15;
     */
    playerDataVersion: number;
    /**
     * @generated from protobuf field: string client_md5 = 16;
     */
    clientMd5: string;
    /**
     * @generated from protobuf field: string client_silence_md5 = 17;
     */
    clientSilenceMd5: string;
    /**
     * @generated from protobuf field: ResVersionConfig res_version_config = 20;
     */
    resVersionConfig?: ResVersionConfig;
    /**
     * @generated from protobuf field: map<uint32, BlockInfo> block_info_map = 21;
     */
    blockInfoMap: {
        [key: number]: BlockInfo;
    };
    /**
     * @generated from protobuf field: string client_version_suffix = 24;
     */
    clientVersionSuffix: string;
    /**
     * @generated from protobuf field: string client_silence_version_suffix = 25;
     */
    clientSilenceVersionSuffix: string;
    /**
     * @generated from protobuf field: repeated ShortAbilityHashPair short_ability_hash_map = 27;
     */
    shortAbilityHashMap: ShortAbilityHashPair[];
    /**
     * @generated from protobuf field: bytes sc_info = 28;
     */
    scInfo: Uint8Array;
    /**
     * @generated from protobuf field: bool is_audit = 29;
     */
    isAudit: boolean;
    /**
     * @generated from protobuf field: bool is_sc_open = 30;
     */
    isScOpen: boolean;
    /**
     * @generated from protobuf field: string register_cps = 31;
     */
    registerCps: string;
    /**
     * @generated from protobuf field: repeated FeatureBlockInfo feature_block_info_list = 32;
     */
    featureBlockInfoList: FeatureBlockInfo[];
    /**
     * @generated from protobuf field: bool is_data_need_relogin = 33;
     */
    isDataNeedRelogin: boolean;
    /**
     * @generated from protobuf field: string country_code = 34;
     */
    countryCode: string;
    /**
     * @generated from protobuf field: ResVersionConfig next_res_version_config = 35;
     */
    nextResVersionConfig?: ResVersionConfig;
    /**
     * @generated from protobuf field: string next_resource_url = 36;
     */
    nextResourceUrl: string;
    /**
     * @generated from protobuf field: uint32 target_home_owner_uid = 37;
     */
    targetHomeOwnerUid: number;
    /**
     * @generated from protobuf field: bool is_enable_client_hash_debug = 38;
     */
    isEnableClientHashDebug: boolean;
    /**
     * @generated from protobuf field: bool is_transfer = 39;
     */
    isTransfer: boolean;
    /**
     * @generated from protobuf field: double total_tick_time = 40;
     */
    totalTickTime: number;
}
/**
 * @generated from protobuf enum PlayerLoginRsp.CmdId
 */
export declare enum PlayerLoginRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: CMD_ID = 184;
     */
    CMD_ID = 184
}
declare class PlayerLoginRsp$Type extends MessageType<PlayerLoginRsp> {
    constructor();
    create(value?: PartialMessage<PlayerLoginRsp>): PlayerLoginRsp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerLoginRsp): PlayerLoginRsp;
    private binaryReadMap8;
    private binaryReadMap21;
    internalBinaryWrite(message: PlayerLoginRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message PlayerLoginRsp
 */
export declare const PlayerLoginRsp: PlayerLoginRsp$Type;
export {};
