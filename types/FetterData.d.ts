// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "FetterData.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message FetterData
 */
export interface FetterData {
    /**
     * @generated from protobuf field: uint32 fetter_id = 1;
     */
    fetterId: number;
    /**
     * @generated from protobuf field: uint32 fetter_state = 2;
     */
    fetterState: number;
    /**
     * @generated from protobuf field: repeated uint32 cond_index_list = 3;
     */
    condIndexList: number[];
}
declare class FetterData$Type extends MessageType<FetterData> {
    constructor();
    create(value?: PartialMessage<FetterData>): FetterData;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FetterData): FetterData;
    internalBinaryWrite(message: FetterData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message FetterData
 */
export declare const FetterData: FetterData$Type;
export {};
