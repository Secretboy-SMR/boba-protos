// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,output_javascript,// @generated from protobuf file "AvatarInfo.proto" (syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AvatarExcelInfo } from "./AvatarExcelInfo";
import { AvatarEquipAffixInfo } from "./AvatarEquipAffixInfo";
import { AvatarExpeditionState } from "./AvatarExpeditionState";
import { AvatarFetterInfo } from "./AvatarFetterInfo";
import { AvatarSkillInfo } from "./AvatarSkillInfo";
import { TrialAvatarInfo } from "./TrialAvatarInfo";
import { PropValue } from "./PropValue";
/**
 * @generated from protobuf message AvatarInfo
 */
export interface AvatarInfo {
    /**
     * @generated from protobuf field: uint32 avatar_id = 1;
     */
    avatarId: number;
    /**
     * @generated from protobuf field: uint64 guid = 2;
     */
    guid: bigint;
    /**
     * @generated from protobuf field: map<uint32, PropValue> prop_map = 3;
     */
    propMap: {
        [key: number]: PropValue;
    };
    /**
     * @generated from protobuf field: uint32 life_state = 4;
     */
    lifeState: number;
    /**
     * @generated from protobuf field: repeated uint64 equip_guid_list = 5;
     */
    equipGuidList: bigint[];
    /**
     * @generated from protobuf field: repeated uint32 talent_id_list = 6;
     */
    talentIdList: number[];
    /**
     * @generated from protobuf field: map<uint32, float> fight_prop_map = 7;
     */
    fightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: TrialAvatarInfo trial_avatar_info = 9;
     */
    trialAvatarInfo?: TrialAvatarInfo;
    /**
     * @generated from protobuf field: map<uint32, AvatarSkillInfo> skill_map = 10;
     */
    skillMap: {
        [key: number]: AvatarSkillInfo;
    };
    /**
     * @generated from protobuf field: uint32 skill_depot_id = 11;
     */
    skillDepotId: number;
    /**
     * @generated from protobuf field: AvatarFetterInfo fetter_info = 12;
     */
    fetterInfo?: AvatarFetterInfo;
    /**
     * @generated from protobuf field: uint32 core_proud_skill_level = 13;
     */
    coreProudSkillLevel: number;
    /**
     * @generated from protobuf field: repeated uint32 inherent_proud_skill_list = 14;
     */
    inherentProudSkillList: number[];
    /**
     * @generated from protobuf field: map<uint32, uint32> skill_level_map = 15;
     */
    skillLevelMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: AvatarExpeditionState expedition_state = 16;
     */
    expeditionState: AvatarExpeditionState;
    /**
     * @generated from protobuf field: map<uint32, uint32> proud_skill_extra_level_map = 17;
     */
    proudSkillExtraLevelMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: bool is_focus = 18;
     */
    isFocus: boolean;
    /**
     * @generated from protobuf field: uint32 avatar_type = 19;
     */
    avatarType: number;
    /**
     * @generated from protobuf field: repeated uint32 team_resonance_list = 20;
     */
    teamResonanceList: number[];
    /**
     * @generated from protobuf field: uint32 wearing_flycloak_id = 21;
     */
    wearingFlycloakId: number;
    /**
     * @generated from protobuf field: repeated AvatarEquipAffixInfo equip_affix_list = 22;
     */
    equipAffixList: AvatarEquipAffixInfo[];
    /**
     * @generated from protobuf field: uint32 born_time = 23;
     */
    bornTime: number;
    /**
     * @generated from protobuf field: repeated uint32 pending_promote_reward_list = 24;
     */
    pendingPromoteRewardList: number[];
    /**
     * @generated from protobuf field: uint32 costume_id = 25;
     */
    costumeId: number;
    /**
     * @generated from protobuf field: AvatarExcelInfo excel_info = 26;
     */
    excelInfo?: AvatarExcelInfo;
    /**
     * @generated from protobuf field: uint32 anim_hash = 27;
     */
    animHash: number;
}
declare class AvatarInfo$Type extends MessageType<AvatarInfo> {
    constructor();
    create(value?: PartialMessage<AvatarInfo>): AvatarInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarInfo): AvatarInfo;
    private binaryReadMap3;
    private binaryReadMap7;
    private binaryReadMap10;
    private binaryReadMap15;
    private binaryReadMap17;
    internalBinaryWrite(message: AvatarInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message AvatarInfo
 */
export declare const AvatarInfo: AvatarInfo$Type;
export {};
